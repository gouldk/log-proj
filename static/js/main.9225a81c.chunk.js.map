{"version":3,"sources":["serviceWorker.js","components/entryBox.jsx","components/submitButton.jsx","components/deviceSelect.jsx","components/deviceInfoCard.jsx","components/displayResults.jsx","components/exportResults.jsx","components/submissionPage.jsx","index.js"],"names":["Boolean","window","location","hostname","match","EntryBox","react_default","a","createElement","className","rows","placeholder","type","value","this","props","displayText","onChange","Component","SubmitButton","state","disabled","onClick","onSubmit","role","aria-label","DeviceSelect","id","_this","_this2","e","onSelect","target","DeviceInfoCard","model","an","version","provider","adobeID","src","alt","DisplayResults","renderTableData","data","map","dataPoint","index","key","renderRoku","deviceInfoCard","tableData","deviceInfo","renderTable","pubAd","streamID","error","renderFTV","renderDevice","deviceID","console","log","title","data-toggle","data-target","charAt","length","ExportResults","handleExport","defaultLog","SubmissionPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","preSubmission","entryText","parsedText","handleSubmit","rokuLogParse","ftvLogParse","setState","handleSelect","text","lineArray","split","pubAds","filter","line","includes","streamIDs","errors","appVersions","cableProvider","deviceModelInfo","parsedOutput","substring","onDrop","acceptedFiles","reader","FileReader","file","onload","event","contents","result","readAsText","handleTextChange","parsedString","join","utc","String","Date","toJSON","slice","replace","desc","fileName","element","document","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","child","React","createRef","align","exportResults","es","_ref","getRootProps","entryBox","deviceSelect","submitButton","displayResults","ReactDOM","render","submissionPage","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9225a81c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../custom.css\";\n\nclass EntryBox extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"shadow-sm p-3 mb-5 bg-light rounded\">\n\t\t\t\t<textarea\n\t\t\t\t\trows=\"12\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tplaceholder=\"Drag / drop / paste your log here...\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={this.props.displayText}\n\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EntryBox;\n","import React, { Component } from \"react\";\nimport \"../custom.css\";\n\nclass SubmitButton extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn-outline-primary m-2 w-50\"\n\t\t\t\t\t// className=\"button\"\n\t\t\t\t\tdisabled={false}\n\t\t\t\t\tonClick={this.props.onSubmit}\n\t\t\t\t>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\tSubmit{\" \"}\n\t\t\t\t\t<span role=\"img\" aria-label=\"send\">\n\t\t\t\t\t\t✍🏼\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SubmitButton;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport \"../custom.css\";\n\nclass DeviceSelect extends Component {\n\tstate = {\n\t\tid: this.props.id\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<select\n\t\t\t\tclassName=\"custom-select w-50\"\n\t\t\t\tonChange={e => this.props.onSelect(e.target.value)}\n\t\t\t\tvalue={this.state.id}\n\t\t\t\tdisabled={true}\n\t\t\t>\n\t\t\t\t<option value=\"Roku\">Roku</option>\n\t\t\t\t<option value=\"FTV\">Fire TV</option>\n\t\t\t</select>\n\t\t);\n\t}\n}\n\nexport default DeviceSelect;\n","import React, { Component } from \"react\";\nimport \"../custom.css\";\n\nclass DeviceInfoCard extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"card alert-success mb-2\">\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-10\">\n\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t<h4 className=\"card-title\">device: {this.props.model}</h4>\n\t\t\t\t\t\t\t\t<h6 className=\"card-subtitle mb-2 text-muted\">\n\t\t\t\t\t\t\t\t\tapp: {this.props.an}\n\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t<h6 className=\"card-subtitle mb-2 text-muted\">\n\t\t\t\t\t\t\t\t\tversion: {this.props.version}\n\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t<h6 className=\"card-subtitle mb-2 text-muted\">\n\t\t\t\t\t\t\t\t\tcable provider: {this.props.provider}\n\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t<h6 className=\"card-subtitle mb-2 text-muted\">\n\t\t\t\t\t\t\t\t\tadobe ID: {this.props.adobeID}\n\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-2\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"img-fluid m-2\"\n\t\t\t\t\t\t\t\tsrc=\"https://i.imgur.com/AAt5SUh.png\"\n\t\t\t\t\t\t\t\talt=\"Roku device\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DeviceInfoCard;\n","import React, { Component } from \"react\";\nimport DeviceInfoCard from \"./deviceInfoCard\";\nimport \"../custom.css\";\n\nclass DisplayResults extends Component {\n\tstate = {};\n\n\t// Render the table data with given data array\n\trenderTableData = data => {\n\t\treturn data.map((dataPoint, index) => {\n\t\t\treturn (\n\t\t\t\t<tr key={index}>\n\t\t\t\t\t<td className=\"mr-0\">{dataPoint}</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t};\n\n\t// Render a table with the provided data array & title\n\trenderTable(data, title) {\n\t\treturn (\n\t\t\t<table className=\"table table-striped\">\n\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\t\t\t\tdata-target={\"#\" + title.charAt(0)}\n\t\t\t\t\t\t\tclassName=\"dropdown-toggle\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{title}{\" \"}\n\t\t\t\t\t\t\t<span className=\"badge badge-info m-1\">{data.length}</span>\n\t\t\t\t\t\t\t{/* <span className=\"font-weight-light align-right\">\n\t\t\t\t\t\t\t\tclick to expose // hide\n\t\t\t\t\t\t\t</span> */}\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody id={title.charAt(0)} className=\"collapse\">\n\t\t\t\t\t{this.renderTableData(data)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n\n\t// Roku style rendering\n\trenderRoku = () => {\n\t\treturn (\n\t\t\t<span>\n\t\t\t\t<DeviceInfoCard\n\t\t\t\t\tprovider={this.props.tableData.deviceInfo.provider}\n\t\t\t\t\tversion={this.props.tableData.deviceInfo.version}\n\t\t\t\t\tmodel={this.props.tableData.deviceInfo.model}\n\t\t\t\t\tadobeID={this.props.tableData.deviceInfo.adobeID}\n\t\t\t\t\tan={this.props.tableData.deviceInfo.an}\n\t\t\t\t/>\n\t\t\t\t{this.renderTable(this.props.tableData.pubAd, \"Pub Ads\")}\n\t\t\t\t{this.renderTable(this.props.tableData.streamID, \"Stream IDs\")}\n\t\t\t\t{this.renderTable(this.props.tableData.error, \"Errors\")}\n\t\t\t</span>\n\t\t);\n\t};\n\n\t// Fire TV style rendering\n\trenderFTV = () => {\n\t\treturn (\n\t\t\t<span>\n\t\t\t\t<DeviceInfoCard\n\t\t\t\t\tprovider={this.props.tableData.deviceInfo.provider}\n\t\t\t\t\tversion={this.props.tableData.deviceInfo.version}\n\t\t\t\t\tmodel={this.props.tableData.deviceInfo.model}\n\t\t\t\t\tadobeID={this.props.tableData.deviceInfo.adobeID}\n\t\t\t\t\tan={this.props.tableData.deviceInfo.an}\n\t\t\t\t/>\n\t\t\t\t{this.renderTable(this.props.tableData.pubAd, \"Pub Ads\")}\n\t\t\t\t{this.renderTable(this.props.tableData.streamID, \"Stream IDs\")}\n\t\t\t\t{this.renderTable(this.props.tableData.error, \"Errors\")}\n\t\t\t</span>\n\t\t);\n\t};\n\n\t// Determines which parse method to use based on provided device ID\n\trenderDevice = () => {\n\t\tswitch (this.props.deviceID) {\n\t\t\tcase \"Roku\":\n\t\t\t\tconsole.log(\"Rendering Roku...\");\n\t\t\t\treturn this.renderRoku();\n\t\t\tcase \"FTV\":\n\t\t\t\tconsole.log(\"Rendering FTV...\");\n\t\t\t\treturn this.renderFTV();\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\trender() {\n\t\treturn <div>{this.renderDevice()}</div>;\n\t}\n}\n\nexport default DisplayResults;\n","import React, { Component } from \"react\";\n\nclass ExportResults extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn-secondary m-2 w-10\"\n\t\t\t\t\t// className=\"button\"\n\t\t\t\t\t// disabled={false}\n\t\t\t\t\tonClick={this.props.handleExport}\n\t\t\t\t>\n\t\t\t\t\tExport\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ExportResults;\n","import React, { Component } from \"react\";\nimport EntryBox from \"./entryBox\";\nimport SubmitButton from \"./submitButton\";\nimport DeviceSelect from \"./deviceSelect\";\nimport DisplayResults from \"./displayResults\";\nimport \"../custom.css\";\nimport Dropzone from \"react-dropzone\";\nimport ExportResults from \"./exportResults\";\n\n// Sets the default log option\nlet defaultLog = \"Roku\"; // \"Roku\", \"FTV\"...\n\nclass SubmissionPage extends Component {\n\tstate = {\n\t\tpreSubmission: true,\n\t\tdeviceID: defaultLog,\n\t\tentryText: \"\",\n\t\tparsedText: []\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.child = React.createRef();\n\t}\n\n\t// Submit button's onClick handler\n\thandleSubmit = () => {\n\t\tconsole.log(\"Submit requested.\");\n\t\tlet log = this.state.entryText;\n\t\tswitch (this.state.deviceID) {\n\t\t\tcase \"Roku\":\n\t\t\t\tthis.rokuLogParse(log);\n\t\t\t\tbreak;\n\t\t\tcase \"FTV\":\n\t\t\t\tthis.ftvLogParse(log);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.setState({\n\t\t\tpreSubmission: false //change back to false\n\t\t});\n\t};\n\n\t// Changes the method of log parsing based on device.\n\thandleSelect = deviceID => {\n\t\tconsole.log(\"Selection changed:\", deviceID);\n\t\tthis.setState({ deviceID: deviceID });\n\t};\n\n\tftvLogParse = text => {};\n\n\t// Parse out the relevant information specific to Roku device logs.\n\trokuLogParse = text => {\n\t\tlet lineArray = text.split(/\\r?\\n/);\n\t\tlet pubAds = lineArray.filter(line => line.includes(\"/ads?\"));\n\t\tlet streamIDs = lineArray.filter(line => line.includes(\"streamid\"));\n\t\tlet errors = lineArray.filter(line => line.includes(\"ERROR\"));\n\t\tlet appVersions = lineArray.filter(line => line.includes(\"app_version:\"));\n\t\tlet cableProvider = lineArray.filter(line =>\n\t\t\tline.includes(\"cable_provider:\")\n\t\t);\n\t\tlet deviceModelInfo = lineArray.filter(line =>\n\t\t\tline.includes(\"device_model_info:\")\n\t\t);\n\t\tlet adobeID = lineArray.filter(line => line.includes(\"adobe_id:\"));\n\t\tlet an = lineArray.filter(line => line.includes(\"an:\"));\n\n\t\tlet deviceInfo = {\n\t\t\tprovider: cableProvider[0].substring(21, cableProvider[0].length - 1),\n\t\t\tversion: appVersions[0].substring(18, appVersions[0].length - 1),\n\t\t\tmodel: deviceModelInfo[0].substring(24, deviceModelInfo[0].length - 1),\n\t\t\tadobeID: adobeID[0].substring(15, adobeID[0].length - 1),\n\t\t\tan: an[0].substring(9, an[0].length - 1)\n\t\t};\n\n\t\tlet parsedOutput = {\n\t\t\tpubAd: pubAds,\n\t\t\tstreamID: streamIDs,\n\t\t\tdeviceInfo: deviceInfo,\n\t\t\terror: errors\n\t\t};\n\t\tthis.setState({ parsedText: parsedOutput });\n\t\t// console.log(parsedOutput);\n\t};\n\n\t// Handles the processing of drag & drop files\n\tonDrop = acceptedFiles => {\n\t\tconst reader = new FileReader();\n\t\tconst file = acceptedFiles[0];\n\t\tconsole.log(file);\n\n\t\treader.onload = event => {\n\t\t\tvar contents = event.target.result;\n\t\t\tthis.setState({ entryText: contents });\n\t\t\tthis.handleSubmit();\n\t\t};\n\n\t\treader.readAsText(file);\n\t};\n\n\t// Updates the point of reference used by the entry text box when new text is provided\n\thandleTextChange = text => {\n\t\tthis.setState({ entryText: text.target.value });\n\t};\n\n\t// Handles export file formatting\n\tparsedString = () => {\n\t\tlet text = this.state.parsedText;\n\t\tlet str =\n\t\t\t\"------ Pub Ads ------\\n\" +\n\t\t\ttext.pubAd.join(\"\\n\") +\n\t\t\t\"\\n------ Stream IDs ------\\n\" +\n\t\t\ttext.streamID.join(\"\\n\") +\n\t\t\t\"\\n------ Errors ------\\n\" +\n\t\t\ttext.error.join(\"\\n\");\n\n\t\treturn str;\n\t};\n\n\t// Export the current parsed log to a text file (simplified log)\n\thandleExport = () => {\n\t\t// let time = String(new Date().getDate());\n\t\t// console.log(time);\n\t\tconsole.log(\"Exporting...\");\n\t\tlet utc = String(\n\t\t\tnew Date()\n\t\t\t\t.toJSON()\n\t\t\t\t.slice(0, 10)\n\t\t\t\t.replace(/-/g, \"/\")\n\t\t);\n\n\t\tlet desc = this.state.parsedText.deviceInfo.model;\n\t\tconsole.log(desc);\n\t\tlet fileName = desc + \" \" + utc;\n\t\tconsole.log(fileName);\n\t\tlet element = document.createElement(\"a\");\n\n\t\telement.setAttribute(\n\t\t\t\"href\",\n\t\t\t\"data:text/plain;charset=utf-8,\" + encodeURIComponent(this.parsedString())\n\t\t);\n\t\telement.setAttribute(\"download\", fileName);\n\n\t\telement.style.display = \"none\";\n\t\tdocument.body.appendChild(element);\n\n\t\telement.click();\n\n\t\tdocument.body.removeChild(element);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t<h1 align=\"right\">*</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t<span align=\"right\">\n\t\t\t\t\t\t\t{!this.state.preSubmission && (\n\t\t\t\t\t\t\t\t<ExportResults handleExport={this.handleExport} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* <h6 align=\"center\"><i>where's your excuse now?</i></h6> */}\n\t\t\t\t{this.state.preSubmission && (\n\t\t\t\t\t<div className=\"centered\">\n\t\t\t\t\t\t<Dropzone onDrop={this.onDrop}>\n\t\t\t\t\t\t\t{({ getRootProps }) => (\n\t\t\t\t\t\t\t\t<div {...getRootProps()}>\n\t\t\t\t\t\t\t\t\t<EntryBox\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleTextChange}\n\t\t\t\t\t\t\t\t\t\tdisplayText={this.state.entryText}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Dropzone>\n\n\t\t\t\t\t\t<DeviceSelect id={this.deviceID} onSelect={this.handleSelect} />\n\t\t\t\t\t\t<SubmitButton onSubmit={this.handleSubmit} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{/* {!this.state.preSubmission && (\n\t\t\t\t\t<div className=\"spinner-border text-primary\" role=\"status\">\n\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t\t\t</div>\n\t\t\t\t)} */}\n\t\t\t\t{!this.state.preSubmission && (\n\t\t\t\t\t<DisplayResults\n\t\t\t\t\t\tdeviceID={this.state.deviceID}\n\t\t\t\t\t\ttableData={this.state.parsedText}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SubmissionPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport SubmissionPage from \"./components/submissionPage\";\n\nReactDOM.render(<SubmissionPage />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}